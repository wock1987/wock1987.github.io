<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>暮光的博客</title>
  
  <subtitle>暮光</subtitle>
  <link href="http://wock1987.github.io/atom.xml" rel="self"/>
  
  <link href="http://wock1987.github.io/"/>
  <updated>2020-12-31T04:50:27.700Z</updated>
  <id>http://wock1987.github.io/</id>
  
  <author>
    <name>qing cong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>移动性能测试</title>
    <link href="http://wock1987.github.io/2020/12/31/yi-dong-xing-neng-ce-shi/"/>
    <id>http://wock1987.github.io/2020/12/31/yi-dong-xing-neng-ce-shi/</id>
    <published>2020-12-31T03:48:26.000Z</published>
    <updated>2020-12-31T04:50:27.700Z</updated>
    
    <content type="html"><![CDATA[<h1 id="移动性能测试之使用-Monkey-python-做一个简单的自动化测试"><a href="#移动性能测试之使用-Monkey-python-做一个简单的自动化测试" class="headerlink" title="移动性能测试之使用 Monkey+python 做一个简单的自动化测试"></a>移动性能测试之使用 Monkey+python 做一个简单的自动化测试</h1><p><img src="/images/monkey.png"></p><h2 id="1-monkey是什么？"><a href="#1-monkey是什么？" class="headerlink" title="1.monkey是什么？"></a>1.monkey是什么？</h2><p>monkey 是一款通过<strong>命令行</strong>来对我们APP进行测试的工具，可以运行在模拟器里或真机上。它向系统发送<strong>伪随机</strong>的用户事件流，实现对正应用程序进行压力测试。</p><h2 id="2-伪随机又是什么？"><a href="#2-伪随机又是什么？" class="headerlink" title="2.伪随机又是什么？"></a>2.伪随机又是什么？</h2><p>是因为该随机事件可进行复现（定位可能出现的问题）。我们每次执行一组随机事件，系统都会给一个随机的<strong>ID</strong>，称之为<strong>seed</strong>。若我们想将该组随机事件再次执行一遍，则使用**-s+seed+count**即可。</p><h2 id="3-那么monkey的使用场景是哪些呢？"><a href="#3-那么monkey的使用场景是哪些呢？" class="headerlink" title="3.那么monkey的使用场景是哪些呢？"></a>3.那么monkey的使用场景是哪些呢？</h2><p>monkey 测试是 Android 平台自动化测试的一种手段，通过 monkey 程序模拟用户触摸屏幕、滑动 Trackball、按键等操作来对设备上的程序进行压力测试，检测程序多久会发生异常。（当然也可以做自动化测试）开发人员结合 monkey 打印的日志 和系统打印的日志，修改测试中出现的问题 。</p><h2 id="4-那什么时候进行压力测试呢？"><a href="#4-那什么时候进行压力测试呢？" class="headerlink" title="4.那什么时候进行压力测试呢？"></a>4.那什么时候进行压力测试呢？</h2><ul><li>等产品稳定，没有太多的 bug 的时候，一般会用 monkey 去测试待测应用的稳定性，健壮性（是否会发生闪退，崩溃，无响应）和整机测试。</li><li>执行的时间可以放到每天晚上（阿，多么迷人的夜晚），然后发出报告给研发，第二天研发定位和解决问题。（可以从jenkins自动下载、安装测试包、自动执行monkey、自动发出报告给研发）。另外是稳定版本最后可以再执行一次。</li></ul><h2 id="5-开始进入主题-哈哈，开始其实就是搭建环境"><a href="#5-开始进入主题-哈哈，开始其实就是搭建环境" class="headerlink" title="5.开始进入主题(哈哈，开始其实就是搭建环境)"></a>5.开始进入主题(哈哈，开始其实就是搭建环境)</h2><p>1、确保电脑已安装adb<br>直接下载 adb 安装包，把相关文件放到 c:/windows/system32 目录和 c:/windows/system 目录下，完成安装</p><p><img src="/images/adb%E7%8E%AF%E5%A2%83.png"></p><p>2、jdk环境已配好(没配好的自行移驾百度吧，相信你)</p><p><img src="/images/java%E7%8E%AF%E5%A2%83.png">关于为什么要配置jdk，<br>1、 Monkey程序由Android系统自带，使用Java语言写成，在Android文件系统中的存放路径是：/system/framework/monkey.jar；<br>2、Monkey.jar程序是由一个名为“monkey”的Shell脚本来启动执行，shell脚本在Android文件系统中的存放路径是：/system/bin/monkey；<br>这样就可以通过在CMD窗口中执行:<strong>adb shell monkey ｛+命令参数｝来进行Monkey</strong>测试了。<br>3、（安装模拟器/真机）手机已经打开开发者模式以及USB调试状态<br>4、 把手机锁屏设置为从不</p><h2 id="6-命令参数有啥"><a href="#6-命令参数有啥" class="headerlink" title="6.命令参数有啥"></a>6.命令参数有啥</h2><p>1、参数： -p<br>参数-p用于约束限制，用此参数指定一个或多个包（Package，即App）。指定包之后，monkey将只允许系统启动指定的APP。如果不指定包，monkey将允许系统启动设备中的所有APP。<br>指定一个包：<br><strong>adb shell monkey -p com.kaiyuan.developmentbusiness 100</strong><br>说明：com.kaiyuan.developmentbusiness 为包名，100是事件计数（即让monkey程序模拟 100 次随机用户事件）。<br>指定多个包：<br><strong>adb shell monkey -p com.qywlandroid –p com.kaiyuan.developmentbusiness 100</strong><br>不指定包：<br><strong>adb shell monkey 100</strong><br>说明：monkey 随机启动APP并发送100个随机事件。<br>2、参数: -v 日志详细程度<br>用于指定反馈信息级别（信息级别就是日志的详细程度），总共分3个级别，分别对应的参数如下表所示：<br>日志级别 Level0<br><strong>adb shellmonkey -p com.kaiyuan.developmentbusiness –v 100</strong><br>说明缺省值，仅提供启动提示，测试完成和最终结果等少量信息<br>日志级别 Level 1<br><strong>adb shellmonkey -p com.kaiyuan.developmentbusiness –v -v 100</strong> 说明提供较为详细的日志，包括每个发送到Activity的事件信息<br>日志级别 Level 2<br><strong>adb shellmonkey -p com.kaiyuan.developmentbusiness –v -v –v 100</strong> 说明最详细的日志，包括了测试中选中/未选中的Activity信息<br>3、参数：-s<br>用于指定伪随机数生成器的 seed 值，如果 seed 相同，则两次 monkey 测试所产生的事件序列也相同的。<br>monkey 测试1：<strong>adb shell monkey -p com.kaiyuan.developmentbusiness –s 10 100</strong><br>monkey 测试2：<strong>adb shell monkey -p com.kaiyuan.developmentbusiness –s 10 100</strong><br>两次测试的效果是相同的，因为模拟的用户操作序列（每次操作按照一定的先后顺序所组成的一系列操作，即一个序列）是一样的。操作序列虽然是随机生成的，但是只要我们指定了相同的Seed值，就可以保证两次测试产生的随机操作序列是完全相同的，所以这个操作序列伪随机的；<br>4)、参数：–throttle &lt;毫秒&gt;<br>用于指定用户操作（即事件）间的时延，单位是毫秒；<br><strong>adb shell monkey -p com.qywlandroid –throttle 3000 100</strong><br>5、参数: –ignore-crashes<br>用于指定当应用程序崩溃时（Force&amp; Close错误），monkey是否停止运行。如果使用此参数，即使应用程序崩溃，Monkey依然会发送事件，直到事件计数完成。<br><strong>adb shellmonkey -p com.qywlandroid –ignore-crashes 1000</strong><br>测试过程中即使Weather程序崩溃，Monkey依然会继续发送事件直到事件数目达到1000为止；<br><strong>adb shellmonkey -p com.qywlandroid 1000</strong><br>测试过程中，如果Weather程序崩溃，Monkey将会停止运行。</p><h2 id="7-不多说不多说了开始整活"><a href="#7-不多说不多说了开始整活" class="headerlink" title="7.不多说不多说了开始整活"></a>7.不多说不多说了开始整活</h2><p>看我的目录分布</p><p><img src="/images/%E7%9B%AE%E5%BD%95%E5%88%86%E5%B8%83.png"></p><p><strong>里面的bugreport_book文件是最后生成的，他从哪里来的呢？</strong></p><p>这个时候就该讲一哈我们伟大的插件<strong>ChkBugReport</strong><br>ChkBugRepor t是一个开源工具，它可以把你得到的bugreprot.t解析成适合阅读的 html 文件。导出的html文件包含了根据 bugreport.txt 数据得出的图表和分析结论。</p><p><img src="/images/%E5%88%86%E6%9E%90%E5%BC%82%E5%B8%B8.png"></p><ul><li>如果这个线程死锁，在报告的Errors将会出现。</li><li>***.logs 这部分是对system、main和kernel日志的分析，在这里你可以看到每个进程内存使用图、那个程序产生的log最多、Activity的启动耗时、数据库操作耗时统计、对象被锁定- - 时间、AIDL调用时间、Activity和Service的生命周期及其在内存中使用频率等等</li><li>Processes 操作app过程中产生的系统事件日志、内存使用信息等等</li><li>Battery statistics 电池使用统计</li><li>CPU Frequency statistics CPU频率统计</li><li>Raw data 一些原始数据</li></ul><h2 id="8-直接上成品吧"><a href="#8-直接上成品吧" class="headerlink" title="8.直接上成品吧"></a>8.直接上成品吧</h2><p>链接直达:<a href="https://github.com/Chan-pipi/Chan-pipi">https://github.com/Chan-pipi/Chan-pipi</a></p><p>首先添加.config文件，添加内容为</p><p><img src="/images/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png"></p><p>然后创建runmonkey.py文件，主要函数为</p><ol><li>引用.config，不然你写它干啥用</li></ol><p><img src="/images/%E8%BF%90%E8%A1%8C%E6%96%87%E4%BB%B6.png"></p><p>看到这个代码，也许大家会有疑问?为什么while True：还要抱一层try…finally。（也许是因为爱情❤）</p><p>是因为while True 语句中一定要有结束该循环的break语句，否则会一直循环下去的(也就是可怕的死循环)，这样就容易抛出异常。所以需要错误处理机制 try…finally来保证程序的运行，因为无论 try 中是否有异常触发,finally 代码段都会被执行。</p><ol start="2"><li>安装安装包，（也就是把包放在apk文件下，然后就可以自己安装啦啦啦啦啦啦）</li></ol><p><img src="/images/%E5%AE%89%E8%A3%85%E5%8C%85.png"></p><ol start="3"><li>执行monkey命令</li></ol><p><img src="/images/%E6%89%A7%E8%A1%8C%E8%BF%90%E8%A1%8C%E6%96%87%E4%BB%B6.png"></p><ol start="4"><li>创建bugreport.txt报告，并生成html文件</li></ol><p><img src="/images/%E5%88%9B%E5%BB%BA%E6%8A%A5%E5%91%8A%E6%96%87%E4%BB%B6.png"></p><ol start="5"><li>主函数直接执行</li></ol><p><img src="/images/%E4%B8%BB%E5%87%BD%E6%95%B0%E8%BF%90%E8%A1%8C.png"></p><ol start="5"><li>至于为什么这样写，不告诉你  哈哈哈</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;移动性能测试之使用-Monkey-python-做一个简单的自动化测试&quot;&gt;&lt;a href=&quot;#移动性能测试之使用-Monkey-python-做一个简单的自动化测试&quot; class=&quot;headerlink&quot; title=&quot;移动性能测试之使用 Monkey+pytho</summary>
      
    
    
    
    <category term="技术" scheme="http://wock1987.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="技术分享" scheme="http://wock1987.github.io/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>圣诞之夜</title>
    <link href="http://wock1987.github.io/2020/12/24/sheng-dan-zhi-ye/"/>
    <id>http://wock1987.github.io/2020/12/24/sheng-dan-zhi-ye/</id>
    <published>2020-12-24T08:51:20.000Z</published>
    <updated>2020-12-24T13:12:12.253Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/shengdan.png" alt="圣诞"></p><h1 id="圣诞的幸福"><a href="#圣诞的幸福" class="headerlink" title="圣诞的幸福"></a>圣诞的幸福</h1><p>  一双人，一座峰，或许我们正唱或听着叮咚的歌谣，庆祝这个巅峰圣地的攀登，可放眼望去的却是一片海洋，远航，注定了我们前行的旅程，挥洒青春的汗水，浸浮了一叶扁舟，这里面，有你，有我，有我们一起欢乐的歌声、笑声和奋斗凝聚的眼神，诞生的是一对跳跃的灵魂。</p><p> 或许我们正在拼命的划行舟楫，无边的海洋让我们无暇天边的风景，日出月落似水中倒影，升起又沉沦，数着我们如梦似幻的脚印。没有驻足的港湾，海市蜃楼的繁华只是梦里相见。如果，本是远行人，还在乎什么地平线，追梦人，无需终点。快乐起航，幸福就是一个、一个的站点。路过，终究满载的是收获。</p><p> 盛起一瓢清水，装满一颗星辰，对着晶莹的脉动，诉说着彼此的心声：有你真行！你那通红的脸颊温暖一夜的气氛，星星点灯，胜过洞房花烛到黎明。只是前行的路上，我不语，请不要猜测我的心声，因为我懂你！</p><p> 为何飘飞的白絮不是雪花，因为人生的旅途我们渐行渐远，铺在脚下的地毯记载了我们彼此倾诉的语言，寒冷都知道甜蜜的温暖。你真心懂得嫁的誓言，情意绵绵，融化了冰冷后，挥洒的就是浪漫。南方的冬季，一样烟雨氤氲。在那个多情的季节，我邂逅了这一纸油伞，飘舞了半世涟漪，一湖一亭一双人，傍山傍水半世情。一抬头，微笑的瞰视；一俯首，怯懦的含羞；一个转身，掀开了冗长的等候；一撇回眸，止不住的泪流。是岁月模糊了你的倩影，还是记忆清晰了风景，淡然的晚霞殷红了的双唇，喧嚣的马路紧握着不知所措的双手。那个屋，那座桥，还有那条浣洗过脚丫的溪流，海风的声音，山间的松林，静静……深黄的飘摇，蝶翼的噗嗤，皓白的飘絮，鱼翅的唧唧。走过，路过，见过，听到过，还有什么风雨不能过？</p><p> 前行，是因为我们始终相信地接着海，海连着天，天共着地。有你相陪，就是一片豁达的天地。昨夜，我梦见夜乘浮槎，送回一箩筐圣果。也许那是不经诱惑的取舍，没有魔咒的赤裸，因为平安是人间最美好的夜晚。</p><p> 白色圣诞是圣洁的，但我们原装的圣诞是清纯的，毫无掩饰的外表，无需浓烈的装扮，一样闪烁霓虹的多彩。没有寒流的侵袭，夜显得格外的温暖。夜行的人们牵着手，穿梭于人海中，徒步于喧闹，一举手的冰糖葫芦，一俯首就高山雪莲，眺望着远航的灯塔，近观细如蚊足的壁画，一会儿千年古塔，一会儿乌篷小巷，转身摩天大厦，瞬时地下海洋世界……手心里的汗珠清醒着大脑，在穿梭中定是更加黏合与坚固。今夜我们只是路过人生一丁点儿的旅程，却是送走了整年的春夏秋冬。</p><p> 圣诞的祝福虽然简单，却暖心。纵是在冬季，也一样有着仲夏的热烈。人群中，我听不见自己的声音，却看到了你满脸的汗珠和灿烂的笑意，我无需呐喊，一切尽收心底。这个圣诞，过得不简单，只是路过的一个小小幸福驿站！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/shengdan.png&quot; alt=&quot;圣诞&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;圣诞的幸福&quot;&gt;&lt;a href=&quot;#圣诞的幸福&quot; class=&quot;headerlink&quot; title=&quot;圣诞的幸福&quot;&gt;&lt;/a&gt;圣诞的幸福&lt;/h1&gt;&lt;p&gt;  一双人，一座峰</summary>
      
    
    
    
    <category term="生活" scheme="http://wock1987.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="圣诞" scheme="http://wock1987.github.io/tags/%E5%9C%A3%E8%AF%9E/"/>
    
  </entry>
  
</feed>
